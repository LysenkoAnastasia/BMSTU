Вариант № 18 от 2014-10-06 Группа - Студент -
Изменить последнюю работу предыдущего семестра (N6) так, чтобы:
a) Было обеспечено определение наличия и вывод сведений о PS/2 клавиатуре и PS/2 мыши, наличии и
характеристиках COM-портов, наличии последовательной мыши, подключенной к одному из
обнаруженных COM-портов.
b) Для обнаружения последовательной мыши настроить порт в режиме 1200-N-7-1, затем в регистре MCR
взвести биты 0 и 1 (т.н.DTR и RTS), если мышь подключена, то она ответит с задержкой не более 10 мс
байтом 'M' (обычная 2-кнопочная мышь) или последовательностью 'MZ@' (мышь с колёсиком прокрутки).
c) Опрос и определение характеристик аппаратуры выполнять асинхронно во время работы финального
цикла bios'а.
d) Отчёты об обнаруженном оборудовании должны накапливаться во временном буфере, откуда они
должны извлекаться и выводиться в консоль эмулятора bochs (порт 0xE9) каждые 1 секунды.



Вариант № 10 от 2014-10-28 Группа - Студент -
Изменить первую работу этого семестра (N1) так, чтобы:
a) Процессор был переведён в режим защищённого сегментного преобразования.
b) Финальный цикл выполнялся в 32-x битовом со смещениями не более 2^16 режиме.
c) Обработка прерываний осуществлялась в 32-x битовом со смещениями не более 2^16 режиме.
d) Стек размещался в 32-x битовом со смещениями не более 2^16 обычном сегменте.
e) Данные биос (BDA, Bios Data Area) размещались в 16-ти битовом сегменте.



Вариант № 13 от 2014-10-28 Группа - Студент -
Изменить вторую работу этого модуля (N2) так, чтобы:
a) Было включено защищённое страничное преобразование: страницы 4M, обычное 32-х битовое
страничное преобразование.
b) Для тех страниц, для которых возможно, использовалось наиболее эффективный режим кэширования.
c) Для выполняемого кода bios (диапазон физических адресов 0xF0000..0xFFFFF) использовать линейные
адреса из диапазона 0x8F0000..0x8FFFFF.
d) Для диапазона линейных адресов BDA (Bios Data Area) использовать физические адреса, начинающиеся
c адреса 0x400000.
e) Для физических адресов устройств (отображаемые регистры, видеопамять и т.п.) использовать
линейные адреса, начинающиеся с 0x1400000 (возможно, в смежных страницах для различных устройств).



Вариант № 14 от 2014-10-28 Группа - Студент -
Разработать:
а) собственную реализацию подпрограммы 'char *x_pasrev(char *str)' (переставить местами
символы строки, аналог функции _strrev для pascal-строк (ascib, длина задана 8-ми битовым счётчиком));
б) главную программу, осуществляющую вызов разработанной подпрограммы для её проверки.
Примечания: Предполагается, что для представления символов используется однобайтовая 7-ми битовая
кодировка ASCII, символы 0..9 занимают диапазон 60..71, символы A..Z - 101..132 и a..z - 141..172;
Разрабатываемая подпрограмма обязательно должна использовать строковые инструкции.
Подпрограмма разрабатывается на С и встроенном ассемблере MSVC 32 бита и GCC 32 и 64 бита.
Встроенный ассемблер надо использовать в минимально необходимой степени, но так, чтобы получить
максимально эффективный результирующий код, использующий строковые инструкции.
Для некоторых функций указаны дополнительные ограничения, уменьшающие сложность задачи по
сравнению со стандартным вариантом этой функции.



Вариант № 14 от 2014-12-02 Группа - Студент -
Разработать собственную многопоточную версию процедуры умножения квадратных разреженных
матриц;
Для проверки работоспособности разработать систему тестов;
Запрещается применять стандартные примитивы синхронизации;
Разработка выполняется на С и встроенном ассемблере MSVC 32 бита и GCC 32 и 64 бита.
Встроенный ассемблер надо использовать в минимально необходимой степени, но так, чтобы получить
максимально эффективный результирующий код.
Разработка многопоточной версии выполняется на основе варианта, разработанного в рамках домашнего
задания по курсу архитектуры (при совпадении тем);

